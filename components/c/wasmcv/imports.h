// Generated by `wit-bindgen` 0.32.0. DO NOT EDIT!
#ifndef __BINDINGS_IMPORTS_H
#define __BINDINGS_IMPORTS_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

typedef struct imports_string_t {
  uint8_t*ptr;
  size_t len;
} imports_string_t;

// size is a 2-element integer vector.
// It represents a width and height.
typedef struct wasm_cv_types_size_t {
  int32_t   x;
  int32_t   y;
} wasm_cv_types_size_t;

// point is a 2-element integer vector.
// It represents a x and y coordinate.
typedef wasm_cv_types_size_t wasm_cv_types_point_t;

// scalar is a 4-element floating point vector.
typedef struct wasm_cv_types_scalar_t {
  float   val1;
  float   val2;
  float   val3;
  float   val4;
} wasm_cv_types_scalar_t;

// rect is a rectangle with integer coordinates.
// It is represented by the top-left corner and the bottom-right corner.
typedef struct wasm_cv_types_rect_t {
  wasm_cv_types_size_t   min;
  wasm_cv_types_size_t   max;
} wasm_cv_types_rect_t;

// RGBA is a color with red, green, blue, and alpha channels.
typedef struct wasm_cv_types_rgba_t {
  uint8_t   r;
  uint8_t   g;
  uint8_t   b;
  uint8_t   a;
} wasm_cv_types_rgba_t;

// border-type is a type of border to add to an image.
typedef uint8_t wasm_cv_types_border_type_t;

#define WASM_CV_TYPES_BORDER_TYPE_BORDER_CONSTANT 0
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_REPLICATE 1
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_REFLECT 2
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_WRAP 3
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_REFLECT101 4
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_TRANSPARENT 5
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_DEFAULT 6
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_ISOLATED 7

// adaptive-threshold-type is a type of adaptive thresholding.
typedef uint8_t wasm_cv_types_adaptive_threshold_type_t;

#define WASM_CV_TYPES_ADAPTIVE_THRESHOLD_TYPE_ADAPTIVE_THRESHOLD_MEAN 0
#define WASM_CV_TYPES_ADAPTIVE_THRESHOLD_TYPE_ADAPTIVE_THRESHOLD_GAUSSIAN 1

// threshold-type is a type of thresholding.
typedef uint8_t wasm_cv_types_threshold_type_t;

#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_BINARY 0
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_BINARY_INV 1
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_TRUNC 2
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_TO_ZERO 3
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_TO_ZERO_INV 4
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_MASK 5
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_OTSU 6
#define WASM_CV_TYPES_THRESHOLD_TYPE_TTHRESHOLD_TRIANGLE 7

// data-layout-type is a type of data layout.
typedef uint8_t wasm_cv_types_data_layout_type_t;

#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_UNKNOWN 0
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_ND 1
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NCHW 2
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NCDHW 3
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NHWC 4
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NDHWC 5
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_PLANAR 6

typedef uint8_t wasm_cv_types_padding_mode_type_t;

#define WASM_CV_TYPES_PADDING_MODE_TYPE_PADDING_MODE_NULL 0
#define WASM_CV_TYPES_PADDING_MODE_TYPE_PADDING_MODE_CROP_CENTER 1
#define WASM_CV_TYPES_PADDING_MODE_TYPE_PADDING_MODE_LETTERBOX 2

typedef struct wasm_cv_types_blob_params_t {
  float   scale_factor;
  wasm_cv_types_size_t   size;
  wasm_cv_types_scalar_t   mean;
  bool   swap_rb;
  uint8_t   ddepth;
  wasm_cv_types_data_layout_type_t   data_layout;
  wasm_cv_types_padding_mode_type_t   padding_mode;
  wasm_cv_types_scalar_t   border;
} wasm_cv_types_blob_params_t;

typedef struct wasm_cv_types_mix_max_loc_result_t {
  float   min_val;
  float   max_val;
  wasm_cv_types_size_t   min_loc;
  wasm_cv_types_size_t   max_loc;
} wasm_cv_types_mix_max_loc_result_t;

typedef uint8_t wasm_cv_types_hershey_font_type_t;

#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_SIMPLEX 0
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_PLAIN 1
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_DUPLEX 2
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_COMPLEX 3
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_TRIPLEX 4
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_COMPLEX_SMALL 5
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_SCRIPT_SIMPLEX 6
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_SCRIPT_COMPLEX 7
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_ITALIC 8

typedef uint8_t wasm_cv_types_interpolation_type_t;

#define WASM_CV_TYPES_INTERPOLATION_TYPE_INTERPOLATION_NEAREST 0
#define WASM_CV_TYPES_INTERPOLATION_TYPE_INTERPOLATION_LINEAR 1
#define WASM_CV_TYPES_INTERPOLATION_TYPE_INTERPOLATION_CUBIC 2
#define WASM_CV_TYPES_INTERPOLATION_TYPE_INTERPOLATION_AREA 3
#define WASM_CV_TYPES_INTERPOLATION_TYPE_INTERPOLATION_LANCZOS4 4

typedef uint8_t wasm_cv_types_color_coversion_type_t;

#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGR_TO_BGRA 0
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGB_TO_RGBA 1
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGRA_TO_BGR 2
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGBA_TO_RGB 3
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGR_TO_RGBA 4
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGB_TO_BGRA 5
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGBA_TO_BGR 6
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGRA_TO_RGB 7
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGR_TO_RGB 8
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGB_TO_BGR 9
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGRA_TO_RGBA 10
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGBA_TO_BGRA 11
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGR_TO_GRAY 12
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGB_TO_GRAY 13
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_GRAY_TO_BGR 14
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_GRAY_TO_RGB 15
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_GRAY_TO_BGRA 16
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_GRAY_TO_RGBA 17
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_BGRA_TO_GRAY 18
#define WASM_CV_TYPES_COLOR_COVERSION_TYPE_COLOR_RGBA_TO_GRAY 19

typedef uint8_t wasm_cv_types_morph_shape_t;

#define WASM_CV_TYPES_MORPH_SHAPE_MORPH_RECT 0
#define WASM_CV_TYPES_MORPH_SHAPE_MORPH_CROSS 1
#define WASM_CV_TYPES_MORPH_SHAPE_MORPH_ELLIPSE 2

typedef wasm_cv_types_mix_max_loc_result_t wasm_cv_mat_mix_max_loc_result_t;

typedef wasm_cv_types_rect_t wasm_cv_mat_rect_t;

typedef uint8_t wasm_cv_mat_mattype_t;

#define WASM_CV_MAT_MATTYPE_CV8U 0
#define WASM_CV_MAT_MATTYPE_CV8S 1
#define WASM_CV_MAT_MATTYPE_CV16U 2
#define WASM_CV_MAT_MATTYPE_CV16S 3
#define WASM_CV_MAT_MATTYPE_CV32S 4
#define WASM_CV_MAT_MATTYPE_CV32F 5
#define WASM_CV_MAT_MATTYPE_CV64F 6

typedef struct wasm_cv_mat_own_mat_t {
  int32_t __handle;
} wasm_cv_mat_own_mat_t;

typedef struct wasm_cv_mat_borrow_mat_t {
  int32_t __handle;
} wasm_cv_mat_borrow_mat_t;

typedef struct {
  uint32_t *ptr;
  size_t len;
} imports_list_u32_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} imports_list_u8_t;

typedef struct {
  float *ptr;
  size_t len;
} imports_list_f32_t;

typedef struct {
  int32_t *ptr;
  size_t len;
} imports_list_s32_t;

typedef wasm_cv_types_border_type_t wasm_cv_cv_border_type_t;

typedef wasm_cv_types_size_t wasm_cv_cv_size_t;

typedef wasm_cv_types_point_t wasm_cv_cv_point_t;

typedef wasm_cv_types_adaptive_threshold_type_t wasm_cv_cv_adaptive_threshold_type_t;

typedef wasm_cv_types_threshold_type_t wasm_cv_cv_threshold_type_t;

typedef wasm_cv_types_scalar_t wasm_cv_cv_scalar_t;

typedef wasm_cv_types_rect_t wasm_cv_cv_rect_t;

typedef wasm_cv_types_rgba_t wasm_cv_cv_rgba_t;

typedef wasm_cv_types_hershey_font_type_t wasm_cv_cv_hershey_font_type_t;

typedef wasm_cv_types_interpolation_type_t wasm_cv_cv_interpolation_type_t;

typedef wasm_cv_types_color_coversion_type_t wasm_cv_cv_color_coversion_type_t;

typedef wasm_cv_types_morph_shape_t wasm_cv_cv_morph_shape_t;

typedef wasm_cv_mat_mattype_t wasm_cv_cv_mattype_t;

typedef wasm_cv_mat_borrow_mat_t wasm_cv_cv_borrow_mat_t;

typedef wasm_cv_mat_own_mat_t wasm_cv_cv_own_mat_t;

typedef wasm_cv_types_size_t wasm_cv_dnn_size_t;

typedef wasm_cv_types_scalar_t wasm_cv_dnn_scalar_t;

typedef wasm_cv_types_rect_t wasm_cv_dnn_rect_t;

typedef wasm_cv_types_blob_params_t wasm_cv_dnn_blob_params_t;

typedef wasm_cv_types_data_layout_type_t wasm_cv_dnn_data_layout_type_t;

typedef wasm_cv_types_padding_mode_type_t wasm_cv_dnn_padding_mode_type_t;

typedef uint8_t wasm_cv_dnn_net_backend_type_t;

#define WASM_CV_DNN_NET_BACKEND_TYPE_NET_BACKEND_DEFAULT 0
#define WASM_CV_DNN_NET_BACKEND_TYPE_NET_BACKEND_HALIDE 1
#define WASM_CV_DNN_NET_BACKEND_TYPE_NET_BACKEND_OPENVINO 2
#define WASM_CV_DNN_NET_BACKEND_TYPE_NET_BACKEND_OPENCV 3
#define WASM_CV_DNN_NET_BACKEND_TYPE_NET_BACKEND_VKCOM 4
#define WASM_CV_DNN_NET_BACKEND_TYPE_NET_BACKEND_CUDA 5

typedef uint8_t wasm_cv_dnn_net_target_type_t;

#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_CPU 0
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_FP32 1
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_FP16 2
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_VPU 3
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_VULKAN 4
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_FPGA 5
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_CUDA 6
#define WASM_CV_DNN_NET_TARGET_TYPE_NET_TARGET_CUDA_FP16 7

typedef struct wasm_cv_dnn_own_layer_t {
  int32_t __handle;
} wasm_cv_dnn_own_layer_t;

typedef struct wasm_cv_dnn_borrow_layer_t {
  int32_t __handle;
} wasm_cv_dnn_borrow_layer_t;

typedef struct wasm_cv_dnn_own_net_t {
  int32_t __handle;
} wasm_cv_dnn_own_net_t;

typedef struct wasm_cv_dnn_borrow_net_t {
  int32_t __handle;
} wasm_cv_dnn_borrow_net_t;

typedef wasm_cv_mat_own_mat_t wasm_cv_dnn_own_mat_t;

typedef struct {
  imports_string_t *ptr;
  size_t len;
} imports_list_string_t;

typedef struct {
  wasm_cv_dnn_own_mat_t *ptr;
  size_t len;
} wasm_cv_dnn_list_own_mat_t;

typedef struct {
  wasm_cv_dnn_rect_t *ptr;
  size_t len;
} wasm_cv_dnn_list_rect_t;

typedef wasm_cv_types_size_t wasm_cv_objdetect_size_t;

typedef wasm_cv_types_rect_t wasm_cv_objdetect_rect_t;

typedef struct wasm_cv_objdetect_own_cascade_classifier_t {
  int32_t __handle;
} wasm_cv_objdetect_own_cascade_classifier_t;

typedef struct wasm_cv_objdetect_borrow_cascade_classifier_t {
  int32_t __handle;
} wasm_cv_objdetect_borrow_cascade_classifier_t;

typedef struct wasm_cv_objdetect_own_hog_descriptor_t {
  int32_t __handle;
} wasm_cv_objdetect_own_hog_descriptor_t;

typedef struct wasm_cv_objdetect_borrow_hog_descriptor_t {
  int32_t __handle;
} wasm_cv_objdetect_borrow_hog_descriptor_t;

typedef struct wasm_cv_objdetect_own_face_detector_yn_t {
  int32_t __handle;
} wasm_cv_objdetect_own_face_detector_yn_t;

typedef struct wasm_cv_objdetect_borrow_face_detector_yn_t {
  int32_t __handle;
} wasm_cv_objdetect_borrow_face_detector_yn_t;

typedef uint8_t wasm_cv_objdetect_face_distance_type_t;

#define WASM_CV_OBJDETECT_FACE_DISTANCE_TYPE_FACE_DISTANCE_TYPE_COSINE 0
#define WASM_CV_OBJDETECT_FACE_DISTANCE_TYPE_FACE_DISTANCE_NORM_L2 1

typedef struct wasm_cv_objdetect_own_face_recognizer_sf_t {
  int32_t __handle;
} wasm_cv_objdetect_own_face_recognizer_sf_t;

typedef struct wasm_cv_objdetect_borrow_face_recognizer_sf_t {
  int32_t __handle;
} wasm_cv_objdetect_borrow_face_recognizer_sf_t;

typedef wasm_cv_mat_own_mat_t wasm_cv_objdetect_own_mat_t;

typedef struct {
  wasm_cv_objdetect_rect_t *ptr;
  size_t len;
} wasm_cv_objdetect_list_rect_t;

typedef wasm_cv_mat_own_mat_t exports_wasm_cv_request_own_mat_t;

// Imported Functions from `wasm:cv/mat`
// Create a new Mat. id does not currently do anything.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_constructor_mat(uint32_t id);
// Create a new Mat with the specified size and type.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_static_mat_new_with_size(uint32_t cols, uint32_t rows, wasm_cv_mat_mattype_t mattype);
// Clone returns a cloned full copy of the Mat.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_clone(wasm_cv_mat_borrow_mat_t self);
// Close the Mat
extern void wasm_cv_mat_method_mat_close(wasm_cv_mat_borrow_mat_t self);
// Cols returns the number of columns for this Mat.
extern uint32_t wasm_cv_mat_method_mat_cols(wasm_cv_mat_borrow_mat_t self);
// Rows returns the number of rows for this Mat.
extern uint32_t wasm_cv_mat_method_mat_rows(wasm_cv_mat_borrow_mat_t self);
// Region returns a new Mat that points to a region of this Mat. Changes made to the
// region Mat will affect the original Mat, since they are pointers to the underlying
// OpenCV Mat object.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_region(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_rect_t *rect);
// CopyTo copies Mat into destination Mat.
extern void wasm_cv_mat_method_mat_copy_to(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_borrow_mat_t dst);
// ConvertTo converts Mat into destination Mat.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_convert_to(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_mattype_t mattype);
// MatType returns the type of the Mat.
extern wasm_cv_mat_mattype_t wasm_cv_mat_method_mat_mattype(wasm_cv_mat_borrow_mat_t self);
// Size returns an array with one element for each dimension containing the size of that dimension for the Mat.
extern void wasm_cv_mat_method_mat_size(wasm_cv_mat_borrow_mat_t self, imports_list_u32_t *ret);
// Empty returns true if the Mat is empty.
extern bool wasm_cv_mat_method_mat_empty(wasm_cv_mat_borrow_mat_t self);
// GetFloatAt returns the value at the specified row and column as a f32.
extern float wasm_cv_mat_method_mat_get_float_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col);
// SetFloatAt sets the value at the specified row and column as a f32.
extern void wasm_cv_mat_method_mat_set_float_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, float val);
// GetUCharAt returns the value at the specified row and column as a u8.
extern uint8_t wasm_cv_mat_method_mat_get_uchar_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col);
// SetUCharAt sets the value at the specified row and column as a u8.
extern void wasm_cv_mat_method_mat_set_uchar_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, uint8_t val);
// GetIntAt returns the value at the specified row and column as a s32.
extern int32_t wasm_cv_mat_method_mat_get_int_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col);
// SetIntAt sets the value at the specified row and column as a s32.
extern void wasm_cv_mat_method_mat_set_int_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, int32_t val);
// GetFloatAt3 returns the value at the specified x, y, z as a f32.
extern float wasm_cv_mat_method_mat_get_float_at3(wasm_cv_mat_borrow_mat_t self, uint32_t x, uint32_t y, uint32_t z);
// SetFloatAt3 sets the value at the specified x, y, z as a f32.
extern void wasm_cv_mat_method_mat_set_float_at3(wasm_cv_mat_borrow_mat_t self, uint32_t x, uint32_t y, uint32_t z, float val);
// GetUCharAt3 returns the value at the specified x, y, z as a u8.
extern uint8_t wasm_cv_mat_method_mat_get_uchar_at3(wasm_cv_mat_borrow_mat_t self, uint32_t x, uint32_t y, uint32_t z);
// SetUCharAt3 sets the value at the specified x, y, z as a u8.
extern void wasm_cv_mat_method_mat_set_uchar_at3(wasm_cv_mat_borrow_mat_t self, uint32_t x, uint32_t y, uint32_t z, uint8_t val);
// GetIntAt3 returns the value at the specified x, y, z as a s32.
extern int32_t wasm_cv_mat_method_mat_get_int_at3(wasm_cv_mat_borrow_mat_t self, uint32_t x, uint32_t y, uint32_t z);
// SetIntAt3 sets the value at the specified x, y, z as a s32.
extern void wasm_cv_mat_method_mat_set_int_at3(wasm_cv_mat_borrow_mat_t self, uint32_t x, uint32_t y, uint32_t z, int32_t val);
// GetVecbAt returns a vector of bytes. Its size corresponds to the number of channels of the Mat.
extern void wasm_cv_mat_method_mat_get_vecb_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, imports_list_u8_t *ret);
// GetVecfAt returns a vector of floats. Its size corresponds to the number of channels of the Mat.
extern void wasm_cv_mat_method_mat_get_vecf_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, imports_list_f32_t *ret);
// GetVeciAt returns a vector of s32. Its size corresponds to the number of channels of the Mat.
extern void wasm_cv_mat_method_mat_get_veci_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, imports_list_s32_t *ret);
// Reshape changes the shape and/or the number of channels of a 2D matrix without copying the data.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html#a4eb96e3251417fa88b78e2abd6cfd7d8
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_reshape(wasm_cv_mat_borrow_mat_t self, uint32_t channels, uint32_t rows);
// RowRange creates a matrix header for the specified row span.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html#aa6542193430356ad631a9beabc624107
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_row_range(wasm_cv_mat_borrow_mat_t self, uint32_t start, uint32_t end);
// ColRange creates a matrix header for the specified column span.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html#aadc8f9210fe4dec50513746c246fa8d9
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_col_range(wasm_cv_mat_borrow_mat_t self, uint32_t start, uint32_t end);
// MinMaxLoc finds the global minimum and maximum in an array.
// 
// For further details, please see:
// https://docs.opencv.org/trunk/d2/de8/group__core__array.html#gab473bf2eb6d14ff97e89b355dac20707
extern void wasm_cv_mat_method_mat_min_max_loc(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_mix_max_loc_result_t *ret);

// Imported Functions from `wasm:cv/cv`
// drawing functions
// ArrowedLine draws a arrow segment pointing from the first point to the second one.
// 
// For further details, please see:
// https://docs.opencv.org/master/d6/d6e/group__imgproc__draw.html#ga0a165a3ca093fd488ac709fdf10c05b2
extern void wasm_cv_cv_arrowed_line(wasm_cv_cv_borrow_mat_t img, wasm_cv_cv_point_t *point1, wasm_cv_cv_point_t *point2, wasm_cv_cv_rgba_t *c, uint8_t thickness);
// Rectangle draws a simple, thick, or filled up-right rectangle.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d6e/group__imgproc__draw.html#ga07d2f74cadcf8e305e810ce8f3d1e1b7
extern void wasm_cv_cv_rectangle(wasm_cv_cv_borrow_mat_t img, wasm_cv_cv_rect_t *r, wasm_cv_cv_rgba_t *c, uint8_t thickness);
// Circle draws a circle.
// 
// For further details, please see:
// https://docs.opencv.org/master/d6/d6e/group__imgproc__draw.html#gaf10604b069374903dbd0f0488cb43670
extern void wasm_cv_cv_circle(wasm_cv_cv_borrow_mat_t img, wasm_cv_cv_point_t *center, uint32_t radius, wasm_cv_cv_rgba_t *c, uint8_t thickness);
// Line draws a line segment connecting two points.
// 
// For further details, please see:
// https://docs.opencv.org/master/d6/d6e/group__imgproc__draw.html#ga7078a9fae8c7e7d13d24dac2520ae4a2
extern void wasm_cv_cv_line(wasm_cv_cv_borrow_mat_t img, wasm_cv_cv_point_t *point1, wasm_cv_cv_point_t *point2, wasm_cv_cv_rgba_t *c, uint8_t thickness);
// PutText draws a text string.
// It renders the specified text string into the img Mat at the location
// passed in the "org" param, using the desired font face, font scale,
// color, and line thinkness.
// 
// For further details, please see:
// http://docs.opencv.org/master/d6/d6e/group__imgproc__draw.html#ga5126f47f883d730f633d74f07456c576
extern void wasm_cv_cv_put_text(wasm_cv_cv_borrow_mat_t img, imports_string_t *text, wasm_cv_cv_point_t *org, wasm_cv_cv_hershey_font_type_t font_face, double font_scale, wasm_cv_cv_rgba_t *c, int32_t thickness);
// imgproc functions
// AdaptiveThreshold applies a fixed-level threshold to each array element.
// 
// For further details, please see:
// https://docs.opencv.org/master/d7/d1b/group__imgproc__misc.html#ga72b913f352e4a1b1b397736707afcde3
extern wasm_cv_cv_own_mat_t wasm_cv_cv_adaptive_threshold(wasm_cv_cv_own_mat_t src, float max_value, wasm_cv_cv_adaptive_threshold_type_t adaptive_type, wasm_cv_cv_threshold_type_t threshold_type, uint32_t block_size, float c);
// Blur blurs an image Mat using a normalized box filter.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#ga8c45db9afe636703801b0b2e440fce37
extern wasm_cv_cv_own_mat_t wasm_cv_cv_blur(wasm_cv_cv_own_mat_t src, wasm_cv_cv_size_t *k_size);
// BoxFilter blurs an image using the box filter.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#gad533230ebf2d42509547d514f7d3fbc3
extern wasm_cv_cv_own_mat_t wasm_cv_cv_box_filter(wasm_cv_cv_own_mat_t src, uint32_t depth, wasm_cv_cv_size_t *k_size);
// Canny finds edges in an image using the Canny algorithm.
// The function finds edges in the input image image and marks
// them in the output map edges using the Canny algorithm.
// The smallest value between threshold1 and threshold2 is used
// for edge linking. The largest value is used to
// find initial segments of strong edges.
// See http://en.wikipedia.org/wiki/Canny_edge_detector
// 
// For further details, please see:
// http://docs.opencv.org/master/dd/d1a/group__imgproc__feature.html#ga04723e007ed888ddf11d9ba04e2232de
extern wasm_cv_cv_own_mat_t wasm_cv_cv_canny(wasm_cv_cv_own_mat_t src, float threshold1, float threshold2);
// CvtColor converts an image from one color space to another.
// 
// For further details, please see:
// http://docs.opencv.org/master/d7/d1b/group__imgproc__misc.html#ga4e0972be5de079fed4e3a10e24ef5ef0
extern wasm_cv_cv_own_mat_t wasm_cv_cv_cvt_color(wasm_cv_cv_own_mat_t src, wasm_cv_cv_color_coversion_type_t code);
// Dilate dilates an image by using a specific structuring element.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d4/d86/group__imgproc__filter.html#ga4ff0f3318642c4f469d0e11f242f3b6c
extern wasm_cv_cv_own_mat_t wasm_cv_cv_dilate(wasm_cv_cv_own_mat_t src, wasm_cv_cv_own_mat_t kernel);
// Erode erodes an image by using a specific structuring element.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#gaeb1e0c1033e3f6b891a25d0511362aeb
extern wasm_cv_cv_own_mat_t wasm_cv_cv_erode(wasm_cv_cv_own_mat_t src, wasm_cv_cv_own_mat_t kernel);
// EqualizeHist normalizes the brightness and increases the contrast of the image.
// 
// For further details, please see:
// https://docs.opencv.org/master/d6/dc7/group__imgproc__hist.html#ga7e54091f0c937d49bf84152a16f76d6e
extern wasm_cv_cv_own_mat_t wasm_cv_cv_equalize_hist(wasm_cv_cv_own_mat_t src);
// GaussianBlur blurs an image using a Gaussian filter.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d4/d86/group__imgproc__filter.html#gae8bdcd9154ed5ca3cbc1766d960f45c1
extern wasm_cv_cv_own_mat_t wasm_cv_cv_gaussian_blur(wasm_cv_cv_own_mat_t src, wasm_cv_cv_size_t *size, float sigma_x, float sigma_y, wasm_cv_cv_border_type_t border);
// GetStructuringElement returns a structuring element of the specified size
// and shape for morphological operations.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#gac342a1bb6eabf6f55c803b09268e36dc
extern wasm_cv_cv_own_mat_t wasm_cv_cv_get_structuring_element(wasm_cv_cv_morph_shape_t shape, wasm_cv_cv_size_t *size);
// HoughLines implements the standard or standard multi-scale Hough transform
// algorithm for line detection. For a good explanation of Hough transform, see:
// http://homepages.inf.ed.ac.uk/rbf/HIPR2/hough.htm
// 
// For further details, please see:
// http://docs.opencv.org/master/dd/d1a/group__imgproc__feature.html#ga46b4e588934f6c8dfd509cc6e0e4545a
extern wasm_cv_cv_own_mat_t wasm_cv_cv_hough_lines(wasm_cv_cv_own_mat_t src, double rho, double theta, int32_t threshold);
// HoughLinesP implements the probabilistic Hough transform
// algorithm for line detection. For a good explanation of Hough transform, see:
// http://homepages.inf.ed.ac.uk/rbf/HIPR2/hough.htm
// 
// For further details, please see:
// http://docs.opencv.org/master/dd/d1a/group__imgproc__feature.html#ga8618180a5948286384e3b7ca02f6feeb
extern wasm_cv_cv_own_mat_t wasm_cv_cv_hough_lines_p(wasm_cv_cv_own_mat_t src, double rho, double theta, int32_t threshold);
// MedianBlur blurs an image using the median filter.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#ga564869aa33e58769b4469101aac458f9
extern wasm_cv_cv_own_mat_t wasm_cv_cv_median_blur(wasm_cv_cv_own_mat_t src, wasm_cv_cv_size_t *k_size);
// Resize resizes an image.
// It resizes the image src down to or up to the specified size, storing the
// result in dst. Note that src and dst may be the same image. If you wish to
// scale by factor, an empty sz may be passed and non-zero fx and fy. Likewise,
// if you wish to scale to an explicit size, a non-empty sz may be passed with
// zero for both fx and fy.
// 
// For further details, please see:
// https://docs.opencv.org/master/da/d54/group__imgproc__transform.html#ga47a974309e9102f5f08231edc7e7529d
extern wasm_cv_cv_own_mat_t wasm_cv_cv_resize(wasm_cv_cv_own_mat_t src, wasm_cv_cv_size_t *size, float fx, float fy, wasm_cv_cv_interpolation_type_t interp);
// Threshold applies a fixed-level threshold to each array element.
// 
// For further details, please see:
// https://docs.opencv.org/3.3.0/d7/d1b/group__imgproc__misc.html#gae8a4a146d1ca78c626a53577199e9c57
extern wasm_cv_cv_own_mat_t wasm_cv_cv_threshold(wasm_cv_cv_own_mat_t src, float thresh, float max_value, wasm_cv_cv_threshold_type_t threshold_type);
// Transpose for n-dimensional matrices.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d2/de8/group__core__array.html#gab1b1274b4a563be34cdfa55b8919a4ec
extern wasm_cv_cv_own_mat_t wasm_cv_cv_transpose_nd(wasm_cv_cv_own_mat_t src, imports_list_s32_t *order);
// estimate-affine2d computes an optimal affine transformation between two 2D point sets.
// 
// For further details, please see:
// https://docs.opencv.org/4.0.0/d9/d0c/group__calib3d.html#ga27865b1d26bac9ce91efaee83e94d4dd
extern wasm_cv_cv_own_mat_t wasm_cv_cv_estimate_affine2d(wasm_cv_cv_own_mat_t frm, wasm_cv_cv_own_mat_t to);
// warp-affine applies an affine transformation to an image.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d54/group__imgproc__transform.html#ga0203d9ee5fcd28d40dbc4a1ea4451983
extern wasm_cv_cv_own_mat_t wasm_cv_cv_warp_affine(wasm_cv_cv_own_mat_t src, wasm_cv_cv_own_mat_t m, wasm_cv_cv_size_t *size);

// Imported Functions from `wasm:cv/dnn`
extern wasm_cv_dnn_own_layer_t wasm_cv_dnn_constructor_layer(void);
// GetName returns the name of the layer.
extern void wasm_cv_dnn_method_layer_get_name(wasm_cv_dnn_borrow_layer_t self, imports_string_t *ret);
// ReadNet read deep learning network represented in one of the supported formats.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga138439da76f26266fdefec9723f6c5cd
extern wasm_cv_dnn_own_net_t wasm_cv_dnn_static_net_read(imports_string_t *model, imports_string_t *config);
// ReadNetFromONNX reads a network model stored in ONNX framework's format.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga9198ecaac7c32ddf0aa7a1bcbd359567
extern wasm_cv_dnn_own_net_t wasm_cv_dnn_static_net_read_from_onnx(imports_string_t *model);
// Close the network
extern void wasm_cv_dnn_method_net_close(wasm_cv_dnn_borrow_net_t self);
// Empty returns true if there are no layers in the network.
// 
// For further details, please see:
// https://docs.opencv.org/master/db/d30/classcv_1_1dnn_1_1Net.html#a6a5778787d5b8770deab5eda6968e66c
extern bool wasm_cv_dnn_method_net_empty(wasm_cv_dnn_borrow_net_t self);
// SetInput sets the new input value for the network.
// 
// For further details, please see:
// https://docs.opencv.org/trunk/db/d30/classcv_1_1dnn_1_1Net.html#a672a08ae76444d75d05d7bfea3e4a328
extern void wasm_cv_dnn_method_net_set_input(wasm_cv_dnn_borrow_net_t self, wasm_cv_dnn_own_mat_t input, imports_string_t *name);
// Forward runs forward pass to compute output of layer with name outputName.
// 
// For further details, please see:
// https://docs.opencv.org/trunk/db/d30/classcv_1_1dnn_1_1Net.html#a98ed94cb6ef7063d3697259566da310b
extern wasm_cv_dnn_own_mat_t wasm_cv_dnn_method_net_forward(wasm_cv_dnn_borrow_net_t self, imports_string_t *output_name);
// ForwardLayers forward pass to compute outputs of layers listed in outBlobNames.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#afe22e099b60a2883e220645391f68d4c
extern void wasm_cv_dnn_method_net_forward_layers(wasm_cv_dnn_borrow_net_t self, imports_list_string_t *output_names, wasm_cv_dnn_list_own_mat_t *ret);
// GetUnconnectedOutLayers returns indexes of layers with unconnected outputs.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#ae26f0c29b3733d15d0482098ef9053e3
extern void wasm_cv_dnn_method_net_get_unconnected_out_layers(wasm_cv_dnn_borrow_net_t self, imports_list_u32_t *ret);
// GetLayerNames returns names of layers in the network.
// 
// For further details, please see:
// hhttps://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#a38e67098ae4ae5906bf8d8ea72199c2e
extern void wasm_cv_dnn_method_net_get_layer_names(wasm_cv_dnn_borrow_net_t self, imports_list_string_t *ret);
// GetLayer returns layer with specified id.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#ac944d7f2d3ead5ef9b1b2fa3885f3ff1
extern wasm_cv_dnn_own_layer_t wasm_cv_dnn_method_net_get_layer(wasm_cv_dnn_borrow_net_t self, uint32_t id);
// BlobFromImage creates 4-dimensional blob from image. Optionally resizes and crops image from center,
// subtract mean values, scales values by scalefactor, swap Blue and Red channels.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7
extern wasm_cv_dnn_own_mat_t wasm_cv_dnn_blob_from_image(wasm_cv_dnn_own_mat_t image, float scale_factor, wasm_cv_dnn_size_t *size, wasm_cv_dnn_scalar_t *mean, bool swap_rb, bool crop);
// BlobFromImageWithParams creates 4-dimensional blob from image. Optionally resizes and crops image from center,
// subtract mean values, scales values by scalefactor, swap Blue and Red channels.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7
extern wasm_cv_dnn_own_mat_t wasm_cv_dnn_blob_from_image_with_params(wasm_cv_dnn_own_mat_t image, wasm_cv_dnn_blob_params_t *params);
// BlobRectsToImageRects converts blob rects to image rects.
// 
// For further details, please see:
// https://docs.opencv.org/4.4.0/d6/d0f/group__dnn.html#ga9d118d70a1659af729d01b10233213ee
extern void wasm_cv_dnn_blob_rects_to_image_rects(wasm_cv_dnn_blob_params_t *params, wasm_cv_dnn_list_rect_t *blob_rects, wasm_cv_dnn_size_t *image_size, wasm_cv_dnn_list_rect_t *ret);
// NMSBoxes performs non maximum suppression given boxes and corresponding scores.
// 
// For futher details, please see:
// https://docs.opencv.org/4.4.0/d6/d0f/group__dnn.html#ga9d118d70a1659af729d01b10233213ee
extern void wasm_cv_dnn_nms_boxes(wasm_cv_dnn_list_rect_t *bboxes, imports_list_f32_t *scores, float score_threshold, float nms_threshold, imports_list_s32_t *ret);

// Imported Functions from `wasm:cv/objdetect`
// NewCascadeClassifier returns a new CascadeClassifier.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/df/d20/classcv_1_1FaceDetectorYN.html#a5f7fb43c60c95ca5ebab78483de02516
extern wasm_cv_objdetect_own_cascade_classifier_t wasm_cv_objdetect_constructor_cascade_classifier(imports_string_t *name);
// Close the CascadeClassifier
extern void wasm_cv_objdetect_method_cascade_classifier_close(wasm_cv_objdetect_borrow_cascade_classifier_t self);
// Load cascade classifier from a file.
// 
// For further details, please see:
// http://docs.opencv.org/master/d1/de5/classcv_1_1CascadeClassifier.html#a1a5884c8cc749422f9eb77c2471958bc
extern bool wasm_cv_objdetect_method_cascade_classifier_load(wasm_cv_objdetect_borrow_cascade_classifier_t self, imports_string_t *file);
// DetectMultiScale detects objects of different sizes in the input Mat image.
// The detected objects are returned as a slice of image.Rectangle structs.
// 
// For further details, please see:
// http://docs.opencv.org/master/d1/de5/classcv_1_1CascadeClassifier.html#aaf8181cb63968136476ec4204ffca498
extern void wasm_cv_objdetect_method_cascade_classifier_detect_multi_scale(wasm_cv_objdetect_borrow_cascade_classifier_t self, wasm_cv_objdetect_own_mat_t image, wasm_cv_objdetect_list_rect_t *ret);
// DetectMultiScaleWithParams detects objects of different sizes in the input Mat image.
// The detected objects are returned as a slice of image.Rectangle structs.
// 
// For further details, please see:
// http://docs.opencv.org/master/d1/de5/classcv_1_1CascadeClassifier.html#aaf8181cb63968136476ec4204ffca498
extern void wasm_cv_objdetect_method_cascade_classifier_detect_multi_scale_with_params(wasm_cv_objdetect_borrow_cascade_classifier_t self, wasm_cv_objdetect_own_mat_t image, double scale, uint32_t min_neighbors, uint32_t flags, wasm_cv_objdetect_size_t *min_size, wasm_cv_objdetect_size_t *max_size, wasm_cv_objdetect_list_rect_t *ret);
// NewHOGDescriptor returns a new HOGDescriptor.
extern wasm_cv_objdetect_own_hog_descriptor_t wasm_cv_objdetect_constructor_hog_descriptor(imports_string_t *name);
// Close the HOGDescriptor
extern void wasm_cv_objdetect_method_hog_descriptor_close(wasm_cv_objdetect_borrow_hog_descriptor_t self);
// DetectMultiScale detects objects of different sizes in the input Mat image.
// The detected objects are returned as a slice of image.Rectangle structs.
// 
// For further details, please see:
// https://docs.opencv.org/master/d5/d33/structcv_1_1HOGDescriptor.html#a660e5cd036fd5ddf0f5767b352acd948
extern void wasm_cv_objdetect_method_hog_descriptor_detect_multi_scale(wasm_cv_objdetect_borrow_hog_descriptor_t self, wasm_cv_objdetect_own_mat_t image, wasm_cv_objdetect_list_rect_t *ret);
// DetectMultiScaleWithParams detects objects of different sizes in the input Mat image.
// The detected objects are returned as a slice of image.Rectangle structs.
// 
// For further details, please see:
// https://docs.opencv.org/master/d5/d33/structcv_1_1HOGDescriptor.html#a660e5cd036fd5ddf0f5767b352acd948
extern void wasm_cv_objdetect_method_hog_descriptor_detect_multi_scale_with_params(wasm_cv_objdetect_borrow_hog_descriptor_t self, wasm_cv_objdetect_own_mat_t image, double hit_threshold, wasm_cv_objdetect_size_t *win_stride, wasm_cv_objdetect_size_t *padding, double scale, double final_threshold, bool use_meanshift_grouping, wasm_cv_objdetect_list_rect_t *ret);
// Creates an instance of face detector YN with given parameters.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/df/d20/classcv_1_1FaceDetectorYN.html#a5f7fb43c60c95ca5ebab78483de02516
extern wasm_cv_objdetect_own_face_detector_yn_t wasm_cv_objdetect_constructor_face_detector_yn(imports_string_t *model, imports_string_t *config, wasm_cv_objdetect_size_t *input_size);
// Creates an instance of face detector YN with given parameters.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/df/d20/classcv_1_1FaceDetectorYN.html#a5f7fb43c60c95ca5ebab78483de02516
extern wasm_cv_objdetect_own_face_detector_yn_t wasm_cv_objdetect_static_face_detector_yn_new_with_params(imports_string_t *model, imports_string_t *config, wasm_cv_objdetect_size_t *input_size, float score_threshold, float nms_threshold, uint32_t top_k, uint32_t backend_id, uint32_t target_id);
// Close the face detector
extern void wasm_cv_objdetect_method_face_detector_yn_close(wasm_cv_objdetect_borrow_face_detector_yn_t self);
// Detects faces in the input image.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/df/d20/classcv_1_1FaceDetectorYN.html#ac05bd075ca3e6edc0e328927aae6f45b
extern wasm_cv_objdetect_own_mat_t wasm_cv_objdetect_method_face_detector_yn_detect(wasm_cv_objdetect_borrow_face_detector_yn_t self, wasm_cv_objdetect_own_mat_t input);
extern void wasm_cv_objdetect_method_face_detector_yn_get_input_size(wasm_cv_objdetect_borrow_face_detector_yn_t self, wasm_cv_objdetect_size_t *ret);
extern float wasm_cv_objdetect_method_face_detector_yn_get_nms_threshold(wasm_cv_objdetect_borrow_face_detector_yn_t self);
extern float wasm_cv_objdetect_method_face_detector_yn_get_score_threshold(wasm_cv_objdetect_borrow_face_detector_yn_t self);
extern uint32_t wasm_cv_objdetect_method_face_detector_yn_get_topk(wasm_cv_objdetect_borrow_face_detector_yn_t self);
extern void wasm_cv_objdetect_method_face_detector_yn_set_input_size(wasm_cv_objdetect_borrow_face_detector_yn_t self, wasm_cv_objdetect_size_t *size);
extern void wasm_cv_objdetect_method_face_detector_yn_set_nms_threshold(wasm_cv_objdetect_borrow_face_detector_yn_t self, float threshold);
extern void wasm_cv_objdetect_method_face_detector_yn_set_score_threshold(wasm_cv_objdetect_borrow_face_detector_yn_t self, float threshold);
extern void wasm_cv_objdetect_method_face_detector_yn_set_topk(wasm_cv_objdetect_borrow_face_detector_yn_t self, uint32_t topk);
// Creates an instance of FaceRecognizerSF with given parameters.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d09/classcv_1_1FaceRecognizerSF.html#a04df90b0cd7d26d350acd92621a35743
extern wasm_cv_objdetect_own_face_recognizer_sf_t wasm_cv_objdetect_constructor_face_recognizer_sf(imports_string_t *model, imports_string_t *config);
// Creates an instance of FaceRecognizerSF with given parameters.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d09/classcv_1_1FaceRecognizerSF.html#a04df90b0cd7d26d350acd92621a35743
extern wasm_cv_objdetect_own_face_recognizer_sf_t wasm_cv_objdetect_static_face_recognizer_sf_new_with_params(imports_string_t *model, imports_string_t *config, uint32_t backend_id, uint32_t target_id);
// Close the face FaceRecognizerSF
extern void wasm_cv_objdetect_method_face_recognizer_sf_close(wasm_cv_objdetect_borrow_face_recognizer_sf_t self);
// Aligns detected face with the source input image and crops it.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d09/classcv_1_1FaceRecognizerSF.html#a84492908abecbc9362b4ddc8d46b8345
extern wasm_cv_objdetect_own_mat_t wasm_cv_objdetect_method_face_recognizer_sf_align_crop(wasm_cv_objdetect_borrow_face_recognizer_sf_t self, wasm_cv_objdetect_own_mat_t src, wasm_cv_objdetect_own_mat_t face_box);
// Feature extracts face feature from aligned image.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d09/classcv_1_1FaceRecognizerSF.html#ab1b4a3c12213e89091a490c573dc5aba
extern wasm_cv_objdetect_own_mat_t wasm_cv_objdetect_method_face_recognizer_sf_feature(wasm_cv_objdetect_borrow_face_recognizer_sf_t self, wasm_cv_objdetect_own_mat_t aligned);
// Match calculates the distance between two face features.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d09/classcv_1_1FaceRecognizerSF.html#a2f0362ca1e64320a1f3ba7e1386d0219
extern float wasm_cv_objdetect_method_face_recognizer_sf_match(wasm_cv_objdetect_borrow_face_recognizer_sf_t self, wasm_cv_objdetect_own_mat_t face1, wasm_cv_objdetect_own_mat_t face2);
// Match calculates the distance between two face features.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/da/d09/classcv_1_1FaceRecognizerSF.html#a2f0362ca1e64320a1f3ba7e1386d0219
extern float wasm_cv_objdetect_method_face_recognizer_sf_match_with_params(wasm_cv_objdetect_borrow_face_recognizer_sf_t self, wasm_cv_objdetect_own_mat_t face1, wasm_cv_objdetect_own_mat_t face2, wasm_cv_objdetect_face_distance_type_t distance);

// Exported Functions from `wasm:cv/request`
exports_wasm_cv_request_own_mat_t exports_wasm_cv_request_process(exports_wasm_cv_request_own_mat_t image);

// Helper Functions

extern void wasm_cv_mat_mat_drop_own(wasm_cv_mat_own_mat_t handle);

extern wasm_cv_mat_borrow_mat_t wasm_cv_mat_borrow_mat(wasm_cv_mat_own_mat_t handle);

void imports_list_u32_free(imports_list_u32_t *ptr);

void imports_list_u8_free(imports_list_u8_t *ptr);

void imports_list_f32_free(imports_list_f32_t *ptr);

void imports_list_s32_free(imports_list_s32_t *ptr);

extern void wasm_cv_dnn_layer_drop_own(wasm_cv_dnn_own_layer_t handle);

extern wasm_cv_dnn_borrow_layer_t wasm_cv_dnn_borrow_layer(wasm_cv_dnn_own_layer_t handle);

extern void wasm_cv_dnn_net_drop_own(wasm_cv_dnn_own_net_t handle);

extern wasm_cv_dnn_borrow_net_t wasm_cv_dnn_borrow_net(wasm_cv_dnn_own_net_t handle);

void imports_list_string_free(imports_list_string_t *ptr);

void wasm_cv_dnn_list_own_mat_free(wasm_cv_dnn_list_own_mat_t *ptr);

void wasm_cv_dnn_list_rect_free(wasm_cv_dnn_list_rect_t *ptr);

extern void wasm_cv_objdetect_cascade_classifier_drop_own(wasm_cv_objdetect_own_cascade_classifier_t handle);

extern wasm_cv_objdetect_borrow_cascade_classifier_t wasm_cv_objdetect_borrow_cascade_classifier(wasm_cv_objdetect_own_cascade_classifier_t handle);

extern void wasm_cv_objdetect_hog_descriptor_drop_own(wasm_cv_objdetect_own_hog_descriptor_t handle);

extern wasm_cv_objdetect_borrow_hog_descriptor_t wasm_cv_objdetect_borrow_hog_descriptor(wasm_cv_objdetect_own_hog_descriptor_t handle);

extern void wasm_cv_objdetect_face_detector_yn_drop_own(wasm_cv_objdetect_own_face_detector_yn_t handle);

extern wasm_cv_objdetect_borrow_face_detector_yn_t wasm_cv_objdetect_borrow_face_detector_yn(wasm_cv_objdetect_own_face_detector_yn_t handle);

extern void wasm_cv_objdetect_face_recognizer_sf_drop_own(wasm_cv_objdetect_own_face_recognizer_sf_t handle);

extern wasm_cv_objdetect_borrow_face_recognizer_sf_t wasm_cv_objdetect_borrow_face_recognizer_sf(wasm_cv_objdetect_own_face_recognizer_sf_t handle);

void wasm_cv_objdetect_list_rect_free(wasm_cv_objdetect_list_rect_t *ptr);

// Transfers ownership of `s` into the string `ret`
void imports_string_set(imports_string_t *ret, const char*s);

// Creates a copy of the input nul-terminate string `s` and
// stores it into the component model string `ret`.
void imports_string_dup(imports_string_t *ret, const char*s);

// Deallocates the string pointed to by `ret`, deallocating
// the memory behind the string.
void imports_string_free(imports_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
